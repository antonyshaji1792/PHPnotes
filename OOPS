Inheritance
Construtor
Destrutor
Access Modifiers - Public, Private, Protected
Interface
Abstract Classes

Inheritance - include the class file name and use extends to use the included file methods

Class A extends B{}

=========================
Construtor
Function called every time the object of the class in initiated.

public function __construct(){}


==============================
Destrutor
Function called every time at the end of every time when an object of a class is initiated.

public function __destruct(){}

============================
Static Methods
Static methods can be called directly without needing an instance of the class (an object). And, $this pseudo-variable is not available inside static methods.

Static methods and properties can be considered as escaping from Object-Oriented Programming.r

=====================

Access Modifiers

Public

Can be accessible anywhere

Private - 
1) Private property no direct echo of the property. To echo it has to pass through a public function.
2) Private property cannot be used in the extended class also. Only accessible inside the declared class

Protected -

Cannot be accessed even by own Object directly, but can be used by own or extended class methods

=============================

Interface

1. Rules for creating methods in objects. So that developer will not create different do function names to same functionalities

created by 

interface Name{
  public function funcName();
}
The class that will have this interface should use the above declared function.

interface Name{
  public function funcName($value1, $value2);
}

The class that will have this interface should use the above declared function and must have two values.

To use it
1. First include the file
2. Then Class A implements interfacename{} 
3. we can implement more than one interface for a class
   Then Class A implements interfacename,interfacename2{} 
================================================================
Abstract Classes

abstract Class A{
  
}

We cannot create object from a abstract class.
It can only be extends to different class. And abstract methods can be used directly


abstract Class A{
  abstract public function newfunc();
}

Any class that extends the abstract class must have the above abstract function (rule like interface)

==============================================================





